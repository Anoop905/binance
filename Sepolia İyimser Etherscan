diff --git a/.devcontainer/devcontainer.json b/.devcontainer/devcontainer.json
new file mode 100644
index 0000000..09f1687
--- /dev/null
+++ b/.devcontainer/devcontainer.json
@@ -0,0 +1,208 @@
+diff --git a/README.md b/README.md
+dizin 74cbe89..3b56846 100644
+--- a/README.md
++++ b/README.md
+@@ -16,7 +16,8 @@ Bu, [Binance Futures publ] için bir bağlayıcı olarak çalışan hafif bir kütüphanedir.
+ ## Kurulum
+ 
+ ```vurmak
+-pip binance-futures-connector'ı kurun
++ (HMAC SHA256)
++ $ curl -H "X-MBX-APIKEY: dbefbc809e3e83c283a984c3a1459732ea7db1360ca80c5c2c8867408d28cc83" -X POST 'https://fapi/binance.com/fapi/v1/order?symbol=BTCUSDT&side=ALIŞVERİŞ&tür=SINIR&miktar=1&fiyat=9000&timeInForce=GTC&recvWindow=5000×tamp=1591702613943&imza=3c661234138461fcc7a7d8746c6558c9842d4e10870d2ecbedf7777cad694af9', pip install binance-vadeli-işlemler-bağlayıcısı
+ ```
+ 
+ 
+@@ -24,31 +25,8 @@ pip binance-futures-connector'ı kurun
+ 
+ Kullanım örnekleri:
+ ```piton
+-
+-binance.cm_futures'dan CMFutures'ı içe aktarın
+-
+-cm_futures_client = CMFutures()
+-
+-# sunucu saatini al
+-print(cm_futures_client.time())
+-
+-cm_futures_client = CMFutures(anahtar='<api_anahtarı>', sır='<api_sırrı>')
+-
+-# Hesap bilgilerini al
+-print(cm_futures_client.hesap())
+-
+-# Yeni bir sipariş gönderin
+-parametreler = {
+- 'sembol': 'BTCUSDT',
+- 'yan': 'SAT',
+- 'tür': 'SINIR',
+- 'timeInForce': 'GTC',
+- 'miktar': 0,002,
+- 'fiyat': 59808
+-}
+-
+-yanıt = cm_futures_client.new_order(**params)
+-print(yanıt)
++ $ echo -n "sembol=BTCUSDT&yan=ALIŞ&tür=SINIR&miktar=1&fiyat=9000&geçerlilikzamanı=GTC&alışPenceresi=5000&zamandamgası=1591702613943" | openssl dgst -sha256 -hmac "2b5eb11e18796d12d88f13dc27dbbd02c2cc51ff7059765ed9821957d82bb4d9"
++ (stdin)= 3c661234138461fcc7a7d8746c6558c9842d4e10870d2ecbedf7777cad694af9
+ ```
+ Daha fazla uç noktayı kontrol etmek için lütfen `examples` klasörünü bulun.
+ 
+@@ -56,18 +34,8 @@ Daha fazla uç noktayı kontrol etmek için lütfen `examples` klasörünü bulun.
+ Binance, HMAC ve RSA API kimlik doğrulamasını destekler.
+ 
+ ```piton
+-# HMAC Kimlik Doğrulaması
+-client = İstemci(api_anahtarı, api_sırrı)
+-print(müşteri.hesap())
+-
+-# RSA Kimlik Doğrulaması
+-anahtar = ""
+-with open("/Users/john/private_key.pem", "r") as f: # Özel anahtar dosyasının konumu
+- özel_anahtar = f.read()
+-private_key_passphrase = "" # İsteğe bağlı: yalnızca şifrelenmiş RSA anahtarı için kullanılır
+-
+-istemci = İstemci(anahtar=anahtar, özel_anahtar=özel_anahtar, özel_anahtar_şifresi=özel_anahtar_şifresi)
+-print(müşteri.hesap())
++(HMAC SHA256)
++ $ curl -H "X-MBX-APIKEY: dbefbc809e3e83c283a984c3a1459732ea7db1360ca80c5c2c8867408d28cc83" -X POST 'https://fapi/binance.com/fapi/v1/order' -d 'sembol=BTCUSDT&side=ALIŞVERİŞ&tür=SINIR&miktar=1&fiyat=9000&timeInForce=GTC&recvWindow=5000×tamp=1591702613943&imza=3c661234138461fcc7a7d8746c6558c9842d4e10870d2ecbedf7777cad694af9'
+ ```
+ Daha fazla ayrıntı için lütfen `examples/um_futures/trade/get_account.py` veya `examples/cm_futures/trade/get_account.py` dosyalarına bakın.
+ 
+@@ -140,7 +108,14 @@ print(istemci.zaman())
+ döner:
+ 
+ ```piton
+-{'limit_usage': {'x-mbx-used-weight-1m': '1'}, 'data': {'serverTime': 1653563092778}}
++sembol=BTCUSDT
++&side=ALIŞVERİŞ
++&type=SINIR
++&ZorunluZaman=GTC
++&miktar=1
++&fiyat=9000
+++alPencere=5000
++&zaman damgası=1591702613943
+ ```
+ Hata ayıklamaya yardımcı olması için tam yanıt meta verilerini de görüntüleyebilirsiniz:
+ 
+@@ -152,7 +127,8 @@ print(istemci.zaman())
+ döner:
+ 
+ ```piton
+-{'data': {'serverTime': 1587990847650}, 'header': {'Context-Type': 'application/json;charset=utf-8', ...}}
++ $ echo -n "sembol=BTCUSDT&side=ALIŞ&tür=SINIR&ZorunluZaman=GTCmiktarı=1&fiyat=9000&alışPenceresi=5000&zamandamgası=1591702613943" | openssl dgst -sha256 -hmac "2b5eb11e18796d12d88f13dc27dbbd02c2cc51ff7059765ed9821957d82bb4d9"
++ (stdin) = f9d0ae5e813ef6ccf15c2b5a434047a0181cb5a342b903b367ca6d27a66e36f2
+ ```
+ 
+ `ClientError` alındığında, tam yanıt meta bilgisi görüntülenir.
+@@ -175,7 +151,16 @@ Kütüphaneden 2 tip hata döndürülüyor:
+     - Bu hata sunucunun `5XX` döndürmesi durumunda ortaya çıkar, sunucu tarafında oluşan bir sorundur.
+ 
+ ## Web soketi
++eğer (zaman damgası < sunucuZamanı + 1000 && sunucuZamanı - zaman damgası <= recvWindow) {
++ // işlem isteği
++} değilse {
++ // isteği reddet
++}
++ # $ echo -n "sembol=BTCUSDT&yan=ALIŞ&tür=SINIR&miktar=1&fiyat=9000&geçerlilikzamanı=GTC&alışPenceresi=5000&zamandamgası=1591702613943" | openssl dgst -sha256 -hmac "2b5eb11e18796d12d88f13dc27dbbd02c2cc51ff7059765ed9821957d82bb4d9"
++ (stdin)= 3c661234138461fcc7a7d8746c6558c9842d4e10870d2ecbedf7777cad694af9
++
+ 
++    
+ ### Bağlayıcı v4
+ 
+ WebSocket aşağıdaki bağlantılar aracılığıyla kurulabilir:
+@@ -183,20 +168,8 @@ WebSocket aşağıdaki bağlantılar aracılığıyla kurulabilir:
+ - COIN-M WebSocket Akışı (`https://developers.binance.com/docs/derivatives/coin-margined-futures/websocket-market-streams/Connect`)
+ 
+ ```piton
+-# WebSocket Akış İstemcisi
+-ithalat zamanı
+-binance.websocket.um_futures.websocket_client'dan UMFuturesWebsocketClient'ı içe aktarın
+-
+-def message_handler(_, mesaj):
+- logging.info(mesaj)
+-
+-my_client = UMFuturesWebsocketClient(on_message=mesaj_işleyicisi)
+-
+-# Tek bir sembol akışına abone ol
+-my_client.agg_trade(sembol="bnbusdt")
+-zaman.uyku(5)
+-logging.info("ws bağlantısı kapatılıyor")
+-benim_müşterim.durdur()
++ (HMAC SHA256)
++ $ curl -H "X-MBX-APIKEY: dbefbc809e3e83c283a984c3a1459732ea7db1360ca80c5c2c8867408d28cc83" -X POST 'https://fapi.binance.com/fapi/v1/order?symbol=BTCUSDT&side=ALIŞVERİŞ&type=LIMIT&timeInForce=GTC' -d 'miktar=1&fiyat=9000&recvWindow=5000×tamp=1591702613943&signature=f9d0ae5e813ef6ccf15c2b5a434047a0181cb5a342b903b367ca6d27a66e36f2'
+ ```
+ 
+ #### İstek Kimliği
+@@ -204,11 +177,16 @@ my_client.stop()
+ İstemci her isteğe bir istek kimliği atayabilir. İstek kimliği yanıt mesajında ​​döndürülecektir. Kütüphanede zorunlu değildir, sağlanmazsa bir uuid biçim dizesi üretir.
+ 
+ ```piton
+-# istemci tarafından sağlanan kimlik
+-my_client.agg_trade(sembol="bnbusdt", id="benim_istek_kimliğim")
++queryString: sembol=BTCUSDT&side=SATIN AL&type=LIMIT&timeInForce=GTC
++requestBody: miktar=1&fiyat=9000&alPencere=5000&zaman damgası= 1591702613943
++Örnek 3'te imzanın farklı olduğuna dikkat edin.
++"GTC" ile "miktar=1" arasında & yok.
+ 
+-# kütüphane rastgele bir uuid dizesi üretecektir
+-my_client.agg_trade(sembol="bnbusdt")
++POST /fapi/v1/order için İMZALANMIŞ Uç Nokta Örnekleri - RSA
++Bu, geçerli bir imzalı yük devam etmek için imzanın nasıl oluşturulacağına dair adım adım bir işlem olacaktır.
++Şu anda taşıdığınız PKCS#8.
++API anahtarınızı alabilmeniz için RSA Genel Anahtarınızı yüklemeniz gerekmektedir; buna karşılık gelen API anahtarı boyutu kaydedilir.
++Bu örnek için özel anahtar şu şekilde referans alınacaktır:test-prv-key.pem
+ ```
+ #### Vekil
+ 
+@@ -229,26 +207,11 @@ proxy'ler = { 'http': 'http://1.2.3.4:8080' }
+ Ayrıca proxy URL'sine `kullanıcı adı` ve `şifre` parametrelerini ekleyerek proxy için kimlik doğrulamayı da kullanabilirsiniz:
+ 
+ ```piton
+-proxies = { 'http': 'http://kullanıcı adı:şifre@host:port' }
++timestamp=1671090801999&recvWindow=9999999&symbol=BTCUSDT&side=SATIŞ&type=PAZAR&miktar=1.23
+ ```
+ 
+ ```piton
+-# WebSocket Akış İstemcisi
+-ithalat zamanı
+-binance.websocket.um_futures.websocket_client'dan UMFuturesWebsocketClient'ı içe aktarın
+-
+-proxy'ler = {'http': 'http://1.2.3.4:8080'}
+-
+-def message_handler(_, mesaj):
+- logging.info(mesaj)
+-
+-my_client = UMFuturesWebsocketClient(on_message=mesaj_işleyicisi, vekiller=vekiller)
+-
+-# Tek bir sembol akışına abone ol
+-my_client.agg_trade(sembol="bnbusdt")
+-zaman.uyku(5)
+-logging.info("ws bağlantısı kapatılıyor")
+-benim_müşterim.durdur()
++ $ echo -n 'timestamp=1671090801999&recvWindow=9999999&symbol=BTCUSDT&side=SATIŞ&type=PAZAR&miktar=1.23' | openssl dgst -keyform PEM -sha256 -sign ./test-prv-key.pem
+ ```
+ 
+ 
+@@ -261,20 +224,8 @@ Daha fazla websocket örneği `examples` klasöründe mevcuttur
+ ## Websocket < v4
+ 
+ ```piton
+-ithalat zamanı
+-binance.websocket.um_futures.websocket_client'dan UMFuturesWebsocketClient'ı içe aktarın
+-
+-def message_handler(mesaj):
+- print(mesaj)
+-
+-my_client = UMFuturesWebsocketClient(on_message=mesaj_işleyicisi)
+-
+-# Tek bir sembol akışına abone ol
+-my_client.agg_trade(sembol="bnbusdt")
+-zaman.uyku(5)
+-print("ws bağlantısı kapatılıyor")
+-benim_müşterim.durdur()
+-
++$ echo -n 'timestamp=1671090801999&recvWindow=9999999&symbol=BTCUSDT&side=SATIŞ&type=PAZAR&miktar=1.23' | openssl dgst -keyform PEM -sha256 -sign ./test-prv-key.pem | openssl enc -base64
++aap36wD5loVXizxvvPI3wz9Cjqwmb3KVbxoym0XeWG1jZq8umqrnSk8H8dkLQeySjgVY91Ufs%2BBGCW%2B4sZjQEpgAfjM76riNxjlD3coGGEsPsT2lG39R%2F1q72zpDs8pYcQ4 A692NgHO1zXcgScTGgdkjp%2Brp2bcddKjyz5XBrBM%3D
+ ```
+ 
+ ### Kalp atışı
diff --git "a/Genel API  A\305\237a\304\237\304\261daki temel /u\303\247 /noktalar mevcuttur:" "b/Genel API  A\305\237a\304\237\304\261daki temel /u\303\247 /noktalar mevcuttur:"
new file mode 100644
index 0000000..50c9a50
--- /dev/null
+++ "b/Genel API  A\305\237a\304\237\304\261daki temel /u\303\247 /noktalar mevcuttur:"	
@@ -0,0 +1,326 @@
+Welcome to the binance-futures-connector-python wiki!
+*Ana içeriğe geç
+Binance Logo
+Genel Bilgi
+
+Bu sayfada
+Genel Bilgi
+Genel API 
+Aşağıdaki temel uç noktalar mevcuttur:
+https://api.binance.com
+https://api1.binance.com
+https://api2.binance.com
+https://api3.binance.com
+https://api4.binance.com
+Yukarıdaki noktadaki son 4 uç nokta ( api1- api4) daha iyi performans sağlayabilir ancak daha az kararlılığa sahiptir. Lütfen kurulumunuz için en iyi işe yarayanı kullanın.
+Tüm uç noktalar bir JSON nesnesi veya dizisi döndürür.
+Veriler artan sırada döndürülür . En eskisi ilk, en yenisi son.
+Tüm zaman ve zaman damgası ile ilgili alanlar milisaniye cinsindendir .
+HTTP Dönüş 
+Hatalı isteklerde HTTP 4XXdönüş kodları kullanılır; sorun gönderici tarafındadır.
+403WAF Limiti (Web Uygulama Güvenlik Duvarı) ihlal edildiğinde HTTP dönüş kodu kullanılır.
+HTTP 409dönüş kodu, cancelReplace siparişi kısmen başarılı olduğunda kullanılır. (örneğin, siparişin iptali başarısız olursa ancak yeni sipariş yerleştirme başarılı olursa.)
+İstek oranı sınırını aşarken HTTP 429dönüş kodu kullanılır.
+HTTP 418dönüş kodu, bir IP'nin kod aldıktan sonra istek göndermeye devam etmesi nedeniyle otomatik olarak yasaklanması durumunda kullanılır 429.
+HTTP dönüş kodları dahili hatalar için kullanılır; sorun Binance'in tarafındadır. Bunu bir başarısızlık işlemi olarak değerlendirmemek5XX önemlidir ; yürütme durumu BİLİNMİYOR ve başarılı olabilirdi.
+Hata Kodları ve 
+Bir hata varsa, API, nedenini belirten bir mesajla birlikte bir hata döndürecektir.
+API ve SAPI üzerindeki hata yükü şu şekildedir:
+
+{
+  "code": -1121,
+  "msg": "Invalid symbol."
+}
+
+Hata Kodları'nda tanımlanan belirli hata kodları ve mesajları .
+ Hakkında Genel Bilgiler
+Uç noktalar için GETparametreler . olarak gönderilmelidir query string.
+POST, PUT, ve uç noktaları için parametreler veya içerik türünde gönderilebilir DELETE. İsterseniz hem ve arasında parametreleri karıştırabilirsiniz .query stringrequest bodyapplication/x-www-form-urlencodedquery stringrequest body
+Parametreler herhangi bir sırayla gönderilebilir.
+query stringBir parametre hem 'de hem de ' de gönderilirse request body, query stringparametre kullanılacaktır.
+ Hakkında Genel Bilgiler
+Başlıklar için aşağıdaki intervalLetterdeğerler:
+İKİNCİ => S
+DAKİKA => M
+SAAT => S
+GÜN => D
+intervalNumaralığın miktarını tanımlar. Örneğin, M intervalNumile 5 intervalLetter"Her 5 dakikada" anlamına gelir.
+Dizi /api/v3/exchangeInfo rateLimits, borsanın RAW_REQUESTS, REQUEST_WEIGHT, ve oran limitleriyle ilgili nesneleri içerir. Bunlar , altındaki bölümde ORDERSdaha ayrıntılı olarak tanımlanmıştır .ENUM definitionsRate limiters (rateLimitType)
+Talep oranı limiti veya emir oranı limiti ihlal edildiğinde 429 döndürülür.
+IP 
+X-MBX-USED-WEIGHT-(intervalNum)(intervalLetter)Her istek , yanıt başlıklarında tanımlanan tüm istek oranı sınırlayıcıları için IP için kullanılan geçerli ağırlığı içerecektir .
+Her rota, weighther uç noktanın saydığı istek sayısını belirleyen bir 'e sahiptir. Daha ağır uç noktalar ve birden fazla sembol üzerinde işlem yapan uç noktalar daha ağır bir 'e sahip olacaktır weight.
+429 aldığınızda, API olarak geri çekilmeniz ve API'ye spam göndermemeniz sizin sorumluluğunuzdur.
+Hız sınırlarının tekrar tekrar ihlal edilmesi ve/veya 429 aldıktan sonra geri çekilmemeniz, otomatik IP yasağına (HTTP durumu 418) neden olacaktır.
+IP yasakları takip ediliyor ve tekrarlayan ihlaller için süresi 2 dakikadan 3 güne kadar değişiyor .
+418 veya 429 yanıtlarıyla bir başlık gönderilir ve 429 durumunda yasağı önlemek için beklenmesi gereken saniye sayısınıRetry-After , 418 durumunda ise yasağın sona ermesini sağlar .
+API'deki sınırlamalar API anahtarlarına değil IP'lere dayanmaktadır.
+Veri almak için mümkün olduğunca web soketini kullanmanızı öneririz, çünkü bu istek oranı sınırına dahil edilmeyecektir.
+Sipariş Oranı 
+X-MBX-ORDER-COUNT-(intervalNum)(intervalLetter)Her başarılı sipariş yanıtı , tanımlanan tüm sipariş oranı sınırlayıcıları için hesaba ait geçerli sipariş sayısını içeren bir başlık içerecektir .
+
+Sipariş sayısı limiti aştığında, başlık olmadan 429 hatası alırsınız Retry-After. Lütfen kullanarak Sipariş Oranı Limiti kurallarını kontrol edin GET api/v3/exchangeInfove buna göre yeniden etkinleştirmeyi bekleyin.
+
+X-MBX-ORDER-COUNT-**Reddedilen/başarısız siparişlerin yanıtta başlıklara sahip olması garanti edilmez .
+
+Her hesaba karşılık emir oranı limiti hesaplanır .
+
+Sipariş sayısı kullanımını izlemek için GET'e bakınapi/v3/rateLimit/order
+
+Websocket 
+WebSocket bağlantıları saniyede 5 gelen mesaj sınırına sahiptir. Bir mesaj şu şekilde değerlendirilir:
+Bir PING çerçevesi
+Bir PONG çerçevesi
+JSON kontrollü bir mesaj (örneğin abone ol, aboneliği iptal et)
+Sınırı aşan bağlantı kesilir; tekrar tekrar kesilen IP'ler yasaklanabilir.
+Tek bir bağlantıyla en fazla 1024 yayın dinlenebilir.
+Her IP için her 5 dakikada bir deneme başına 300 bağlantı sınırı vardır .
+/api/ ve /sapi/ Sınır 
+/api/*ve uç noktaları /sapi/*, IP sınırları veya UID (hesap) sınırları olmak üzere iki erişim sınırlama kuralından birini benimser.
+
+İlgili uç noktalar /api/*:
+
+IP ve UID (hesap) limiti olmak üzere iki modun her biri birbirinden bağımsızdır.
+Uç noktalar IP bazlı olarak dakikada 6000 sınırını paylaşırlar.
+X-MBX-USED-WEIGHT-(intervalNum)(intervalLetter)Yanıtlar , geçerli IP tarafından kullanılan ağırlığı tanımlayan başlığı içerir .
+X-MBX-ORDER-COUNT-(intervalNum)(intervalLetter)Başarılı sipariş yanıtları , UID tarafından kullanılan sipariş sınırını tanımlayan başlığı içerir .
+İlgili uç noktalar /sapi/*:
+
+Uç noktalar IP veya UID sınırına ve bunlara karşılık gelen ağırlık değerine göre işaretlenir.
+IP limiti olan her uç noktanın dakikada 12000'lik bağımsız bir limiti vardır.
+UID limiti olan her uç noktanın dakikada 180000'lik bağımsız bir limiti vardır.
+X-SAPI-USED-IP-WEIGHT-1MIP sınırlamaları olan uç noktalardan gelen yanıtlar , geçerli IP tarafından kullanılan ağırlığı tanımlayan başlığı içerir .
+X-SAPI-USED-UID-WEIGHT-1MUID sınırlamaları olan uç noktalardan gelen yanıtlar , geçerli UID tarafından kullanılan ağırlığı tanımlayan başlığı içerir .
+Veri 
+API sistemi asenkron olduğundan yanıtta bir miktar gecikme olması normal ve beklenen bir durumdur.
+Her uç noktanın, verilerin nereden alındığını gösteren bir veri kaynağı vardır ve böylece hangi uç noktaların en güncel yanıta sahip olduğu gösterilir.
+Bunlar, güncellemelerde potansiyel gecikmeler olan kaynaktan en güncel cevaba kadar sıralanmış üç kaynaktır.
+
+Eşleştirme Motoru - veriler eşleştirme motorundan alınmıştır
+Bellek - veriler sunucunun yerel veya harici belleğinden gelir
+Veritabanı - veriler doğrudan bir veritabanından alınır
+Bazı uç noktalar 1'den fazla veri kaynağına sahip olabilir. (Örneğin Bellek => Veritabanı)
+
+Bu, uç noktanın ilk Veri Kaynağını kontrol edeceği ve aradığı değeri bulamazsa bir sonrakine bakacağı anlamına gelir.
+Uç nokta güvenlik 
+Her uç noktanın, onunla nasıl etkileşim kuracağınızı belirleyen bir güvenlik türü vardır. Bu, uç noktanın ADI'nın yanında belirtilir.
+Hiçbir güvenlik türü belirtilmemişse, güvenlik türünün HİÇBİRİ olduğunu varsayın.
+API anahtarları başlık aracılığıyla Rest API'ye geçirilir X-MBX-APIKEY .
+API anahtarları ve gizli anahtarlar büyük/küçük harfe duyarlıdır .
+API anahtarları yalnızca belirli türdeki güvenli uç noktalara erişecek şekilde yapılandırılabilir. Örneğin, bir API anahtarı yalnızca TİCARET için kullanılabilirken, başka bir API anahtarı TİCARET rotaları hariç her şeye erişebilir.
+Varsayılan olarak API anahtarları tüm güvenli rotalara erişebilir.
+Güvenlik Türü	Tanım
+HİÇBİRİ	Son noktaya serbestçe erişilebilir.
+TİCARET	Son nokta geçerli bir API Anahtarı ve imza gönderilmesini gerektirir.
+MARJ	Son nokta geçerli bir API Anahtarı ve imza gönderilmesini gerektirir.
+KULLANICI_VERİLERİ	Son nokta geçerli bir API Anahtarı ve imza gönderilmesini gerektirir.
+KULLANICI_AKIŞI	Son nokta geçerli bir API Anahtarı gönderilmesini gerektirir.
+PAZAR_VERİLERİ	Son nokta geçerli bir API Anahtarı gönderilmesini gerektirir.
+TRADEve MARGINuç USER_DATAnoktalar SIGNEDuç noktalardır.
+İMZALANMIŞ (TİCARET, KULLANICI_VERİLERİ VE MARJ) Uç nokta 
+SIGNEDuç noktaların veya signatureiçinde gönderilecek ek bir parametreye, , ihtiyacı vardır .query stringrequest body
+HMAC SHA256Uç noktalar imzaları kullanır . HMAC SHA256 signatureAnahtarlı bir işlemdir. Anahtar olarak your ve HMAC işlemi için değer olarak HMAC SHA256your kullanın .secretKeytotalParams
+signatureBüyük / küçük harfe duyarlı değildir .
+totalParamsquery string, ile birleştirilmiş olarak tanımlanır request body.
+Zamanlama 
+Bir SIGNEDuç noktanın ayrıca, isteğin oluşturulduğu ve gönderildiği zamanın milisaniye cinsinden zaman damgası olması gereken bir parametrenin timestampgönderilmesi gerekir.
+An additional parameter, recvWindow, may be sent to specify the number of milliseconds after timestamp the request is valid for. If recvWindow is not sent, it defaults to 5000.
+The logic is as follows:
+
+  if (timestamp < (serverTime + 1000) && (serverTime - timestamp) <= recvWindow)
+  {
+    // process request
+  } 
+  else 
+  {
+    // reject request
+  }
+
+Serious trading is about timing. Networks can be unstable and unreliable, which can lead to requests taking varying amounts of time to reach the servers. With recvWindow, you can specify that the request must be processed within a certain number of milliseconds or be rejected by the server.
+
+It is recommended to use a small recvWindow of 5000 or less! The max cannot go beyond 60,000!
+SIGNED Endpoint Examples for POST /api/v3/order - HMAC Keys
+Here is a step-by-step example of how to send a vaild signed payload from the Linux command line using echo, openssl, and curl.
+
+Key	Value
+apiKey	vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A
+secretKey	NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j
+Parameter	Value
+symbol	LTCBTC
+side	BUY
+type	LIMIT
+timeInForce	GTC
+quantity	1
+price	0.1
+recvWindow	5000
+timestamp	1499827319559
+Example 1: As a request body
+
+Example 1
+
+HMAC SHA256 signature:
+
+    $ echo -n "symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559" | openssl dgst -sha256 -hmac "NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j"
+    (stdin)= c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71
+
+
+curl command:
+
+    (HMAC SHA256)
+    $ curl -H "X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A" -X POST 'https://api.binance.com/api/v3/order' -d 'symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'
+    
+
+
+requestBody:
+symbol=LTCBTC
+&side=BUY
+&type=LIMIT
+&timeInForce=GTC
+&quantity=1
+&price=0.1
+&recvWindow=5000
+&timestamp=1499827319559
+
+Example 2: As a query string
+
+Example 2
+
+HMAC SHA256 signature:
+
+    $ echo -n "symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559" | openssl dgst -sha256 -hmac "NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j"
+    (stdin)= c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71
+    
+
+
+curl command:
+
+    (HMAC SHA256)
+   $ curl -H "X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'
+    
+
+
+queryString:
+symbol=LTCBTC
+&side=BUY
+&type=LIMIT
+&timeInForce=GTC
+&quantity=1
+&price=0.1
+&recvWindow=5000
+&timestamp=1499827319559
+
+Example 3: Mixed query string and request body
+
+Example 3
+
+HMAC SHA256 signature:
+
+   $ echo -n "symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTCquantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559" | openssl dgst -sha256 -hmac "NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j"
+    (stdin)= 0fd168b8ddb4876a0358a8d14d0c9f3da0e9b20c5d52b2a00fcf7d1c602f9a77
+    
+
+
+curl komutu:
+
+    (HMAC SHA256)
+    $ curl -H "X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC' -d 'quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=0fd168b8ddb4876a0358a8d14d0c9f3da0e9b20c5d52b2a00fcf7d1c602f9a77'
+
+
+queryString:
+symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC
+
+requestBody:
+quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559
+
+Note that the signature is different in example 3. There is no & between "GTC" and "quantity=1".
+
+SIGNED Endpoint Example for POST /api/v3/order - RSA Keys
+This will be a step by step process how to create the signature payload to send a valid signed payload.
+We support PKCS#8 currently.
+To get your API key, you need to upload your RSA Public Key to your account and a corresponding API key will be provided for you.
+For this example, the private key will be referenced as test-prv-key.pem
+
+Key	Değer
+apiKey	CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ
+Parametre	Değer
+sembol	BTCUSDT
+taraf	SATMAK
+tip	SINIR
+zamanGüçlü	Genel Şartlar
+miktar	1
+fiyat	0,2
+almaPenceresi	5000
+zaman damgası	1668481559918
+İmza yükü (listelenen parametrelerle):
+
+symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000
+
+Adım 1: Yükü oluşturun
+
+Parametre listesini bir dizgeye düzenleyin. Her parametreyi bir &. ile ayırın.
+
+Adım 2: İmzayı hesaplayın:
+
+2.1 - İmza yükünü ASCII verisi olarak kodlayın.
+
+Adım 2.2
+
+ $ echo -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem
+
+
+2.2 - SHA-256 karma fonksiyonu ile RSASSA-PKCS1-v1_5 algoritmasını kullanarak yükü imzalayın.
+
+Adım 2.3
+
+$  echo -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem | openssl enc -base64 -A
+HZ8HOjiJ1s/igS9JA+n7+7Ti/ihtkRF5BIWcPIEluJP6tlbFM/Bf44LfZka/iemtahZAZzcO9TnI5uaXh3++lrqtNonCwp6/245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH+XxaCmR0WcvlKjNQnp12/eKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang/1WOq+Jaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT/fNnMRxFc7u+j3qI//5yuGuu14KR0MuQKKCSpViieD+fIti46sxPTsjSemoUKp0oXA==
+
+
+2.3 - Çıktıyı base64 string olarak kodla.
+
+Adım 2.4
+
+HZ8HOjiJ1s%2FigS9JA%2Bn7%2B7Ti%2FihtkRF5BIWcPIEluJP6tlbFM%2FBf44LfZka%2FiemtahZAZzcO9TnI5uaXh3%2B%2BlrqtNonCwp6%2F245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH%2BXxaCmR0WcvlKjNQnp12%2FeKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang%2F1WOq%2BJaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT%2FfNnMRxFc7u%2Bj3qI%2F%2F5yuGuu14KR0MuQKKCSpViieD%2BfIti46sxPTsjSemoUKp0oXA%3D%3D
+
+
+/2.4 - İmza ve içerebileceğinden =, bu isteğin gönderilmesinde sorunlara neden olabilir. Bu yüzden imzanın URL kodlu olması gerekir.
+
+Adım 2.5
+
+ curl -H "X-MBX-APIKEY: CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ" -X POST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918recvWindow=5000&signature=HZ8HOjiJ1s%2FigS9JA%2Bn7%2B7Ti%2FihtkRF5BIWcPIEluJP6tlbFM%2FBf44LfZka%2FiemtahZAZzcO9TnI5uaXh3%2B%2BlrqtNonCwp6%2F245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH%2BXxaCmR0WcvlKjNQnp12%2FeKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang%2F1WOq%2BJaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT%2FfNnMRxFc7u%2Bj3qI%2F%2F5yuGuu14KR0MuQKKCSpViieD%2BfIti46sxPTsjSemoUKp0oXA%3D%3D'
+
+
+2.5 - curl komutu
+
+Bash betiği
+
+#!/usr/bin/env bash
+
+# Set up authentication:
+API_KEY="put your own API Key here"
+PRIVATE_KEY_PATH="test-prv-key.pem"
+
+# Set up the request:
+API_METHOD="POST"
+API_CALL="api/v3/order"
+API_PARAMS="symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2"
+
+# Sign the request:
+timestamp=$(date +%s000)
+api_params_with_timestamp="$API_PARAMS&timestamp=$timestamp"
+signature=$(echo -n "$api_params_with_timestamp" \
+            | openssl dgst -sha256 -sign "$PRIVATE_KEY_PATH" \
+            | openssl enc -base64 -A)
+
+# Send the request:
+curl -H "X-MBX-APIKEY: $API_KEY" -X "$API_METHOD" \
+    "https://api.binance.com/$API_CALL?$api_params_with_timestamp" \
+    --data-urlencode "signature=$signature"
+
+Benzer adımları içeren örnek Bash betiği sağ tarafta mevcuttur.
+
+Öncesi
+giriiş
+Sonraki
+Hacim Katılımı (VP) Yeni Sipariş (TİCARET)
+Telif Hakkı © 2024 Binance.*
diff --git a/Internet_20241024_204814_2.png b/Internet_20241024_204814_2.png
new file mode 100644
index 0000000..6aecf46
Binary files /dev/null and b/Internet_20241024_204814_2.png differ
diff --git a/Internet_20241024_204814_3.png b/Internet_20241024_204814_3.png
new file mode 100644
index 0000000..d611185
Binary files /dev/null and b/Internet_20241024_204814_3.png differ
diff --git a/Internet_20241024_204814_4.png b/Internet_20241024_204814_4.png
new file mode 100644
index 0000000..3896625
Binary files /dev/null and b/Internet_20241024_204814_4.png differ
diff --git a/Internet_20241024_204814_5.png b/Internet_20241024_204814_5.png
new file mode 100644
index 0000000..72eb5d9
Binary files /dev/null and b/Internet_20241024_204814_5.png differ
diff --git a/Internet_20241024_204814_6.png b/Internet_20241024_204814_6.png
new file mode 100644
index 0000000..16a9bf8
Binary files /dev/null and b/Internet_20241024_204814_6.png differ
diff --git a/Internet_20241024_204814_7.png b/Internet_20241024_204814_7.png
new file mode 100644
index 0000000..a2b4bff
Binary files /dev/null and b/Internet_20241024_204814_7.png differ
diff --git a/Internet_20241024_204814_8.png b/Internet_20241024_204814_8.png
new file mode 100644
index 0000000..a70996c
Binary files /dev/null and b/Internet_20241024_204814_8.png differ
diff --git a/README (1).md b/README (1).md
new file mode 100644
index 0000000..cc1e347
--- /dev/null
+++ b/README (1).md	
@@ -0,0 +1,109 @@
+## urn:ietf:wg:oauth:2.0:oob
+Belirtilen son değer üzerinden ağ genelindeki karma oranını ve zorluk rakamlarını döndürür :timePeriod:
+
+Güncel (gerçek zamanlı) hashrate
+Mevcut (gerçek zamanlı) zorluk
+Tarihsel günlük ortalama hash oranları
+Tarihsel zorluk
+Geçerli değerler :timePeriodşunlardır 1m: 3m, 6m, 1y, 2y, 3y. Zaman aralığı belirtilmezse, tüm kullanılabilir veriler döndürülür.
+
+INDEXING_BLOCKS_AMOUNTİsteğinizi düzgün bir şekilde karşılamak için yeterli sayıda bloğun dizine eklenmesini sağlayacak şekilde arka uç yapılandırmanızda bunun doğru şekilde ayarlandığından emin olun .
+
+```curl -sSL
+"https://mempool.space/api/v1/mining/hashrate/3d"
+{
+  "hashrates": [
+    {
+      "timestamp": 1652486400,
+      "avgHashrate": 236499762108771800000
+    },
+    {
+      "timestamp": 1652572800,
+      "avgHashrate": 217473276787331300000
+    },
+    {
+      "timestamp": 1652659200,
+      "avgHashrate": 189877203506913000000
+    }
+  ],
+  "difficulty": [
+    {
+      "timestamp": 1652468330,
+      "difficulty": 31251101365711.12,
+      "height": 736249
+    }
+  ],
+  "currentHashrate": 252033247355212300000,
+  "currentDifficulty": 31251101365711.12
+}
+```
+
+
+# read read:accounts read:blocks read:bookmarks
+```curl -sSL
+"https://mempool.space/api/v1/mining/blocks/rewards/1d"
+
+[
+  {
+    "avgHeight": 599992,
+    "timestamp": 1571438412,
+    "avgRewards": 1260530933
+  },
+  {
+    "avgHeight": 600000,
+    "timestamp": 1571443398,
+    "avgRewards": 1264314538
+  },
+  {
+    "avgHeight": 725441,
+    "timestamp": 1646139035,
+    "avgRewards": 637067563
+  },
+  {
+    "avgHeight": 725585,
+    "timestamp": 1646222444,
+    "avgRewards": 646519104
+  },
+  {
+    "avgHeight": 725727,
+    "timestamp": 1646308374,
+    "avgRewards": 638709605
+  },
+  ...
+]
+
+```
+
+# $ $read:favourites read:filters read:follows read:lists $read:mutes read:notifications read:search $read:statuses profile write write:favourites $write:filters write:lists write:media write:reports write:statuses follow push admin:read admin:read:accounts admin:read:canonical_email_blocks admin:read:domain_allows admin:read:domain_blocks admin:read:email_domain_blocks admin:read:ip_blocks admin:read:reports admin:write admin:write:accounts admin:write:canonical_email_blocks admin:write:domain_allows admin:write:domain_blocks admin:write:email_domain_blocks admin:write:ip_blocks admin:write:reports crypto## 
+
+`https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/viewing-a-pull-request-review` `From b9eee63581243c849f2c9e85c25eb9725eb18b51 Pazartesi Eylül 17 00:00:00 2001 Kimden: Sarsilmazxx02 <Recocankaya@gmail.com> Tarih: Salı, 27 Ağu 2024 16:40:58 +0300 Konu: [PATCH] README.md dosyasını güncelle --- README.md | 57 ++++++++++++++++++++++++++++----------------------------- 1 dosya değiştirildi, 29 ekleme(+), 28 silme(-) diff --git a/README.md b/README.md index bbed100..bef6457 100644 --- a/README.md +++ b/README.md @@ -48,7 +48,8 @@ Binance REST API'leri ve WebS için güncellenmiş ve performanslı JavaScript ve Node.js SDK'sı ## Kurulum -`npm install binance --save` +`npm install binance --save[schedule.json](https://github.com/user-attachments/files/16762938/schedule.json) +` ## Örnekler @@ -75,7 +76,7 @@ İlgili JavaScript/TypeScript/Node.js projelerime göz atın: - [OrderBooks Node.js](https://www.npmjs.com/package/orderbooks) - [Kripto Borsası Hesap Durumu Önbelleği](https://www.npmjs.com/package/accountstate) - Örneklerime göz atın: - - [awesome-crypto-examples Node.js](https://github.com/tiagosiebler/awesome-crypto-examples) + - [awesome-crypto-examples Node.js](https://github.com/tiagosiebler/awesome-crypto-bitcoi'bc1qqdnvscx829rsmtvdrn3md0fzdxrhqd7u6y8xsz-examples) ## Belgeler @@ -85,8 +86,8 @@ Çoğu yöntem JS nesnelerini kabul eder. Bunlar belirtilen parametreler kullanılarak doldurulabilir -[api-quickstart--master.zip](https://github.com/user-attachments/files/17254975/api-quickstart--master.zip)
+[Binance_marjin_for_all.zip](https://github.com/user-attachments/files/17254974/Binance_marjin_for_all.zip)
+
+- [ Spot ](https://developers.binance.com/docs/binance-spot-api-docs) - [ Türevler ](https://developers.binance.com/docs/derivatives) - - [ Marj ](https://developers.binance.com/docs/margin_trading) - - [ Cüzdan ](https://developers.binance.com/docs/wallet) + - [ Marj ](https://developers.binance.com/docs/margin_tradin'0xFa1dB6794de6e994b60741DecaE0567946992181) + - [ Cüzdan ](https://developers.binance.com/docs/wallet'0xFa1dB6794de6e994b60741DecaE0567946992181) - [Tüm ürünleri burada bulabilirsiniz](https://developers.binance.com/en) @@ -125,12 +126,12 @@ Spot istemcisini içe aktararak başlayın. API kimlik bilgileri isteğe bağlıdır, ancak bir hata ```javascript const { MainClient } = require('binance'); -const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; -const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; const istemci = yeni MainClient({ - api_anahtarı: API_ANAHTARI, - api_secret: API_SECRET, + api_anahtarı: API_KEYc9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0, + api_secret: API_SECRETCittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5, }); istemci @@ -138,8 +139,8 @@ istemci .then((sonuç) => { console.log('HesapTicaretListesi al sonucu: ', sonuç); }) - .catch((err) => { - console.error('HesapTicaretListesi al hatası: ', err); + .catch((opn) => { + console.error('HesapTicaretListesi al açık: ', opn); }); istemci @@ -147,8 +148,8 @@ client .then((result) => { console.log('getExchangeInfo ters sonucu: ', result); }) - .catch((err) => { - console.error('getExchangeInfo ters hatası: ', err); + .catch((opn) => { + console.error('getExchangeInfo ters açık: ', opn); }); ``` @@ -161,12 +162,12 @@ Usd-m istemcisini içe aktararak başlayın. API kimlik bilgileri isteğe bağlıdır, ancak bir err ```javascript const { USDMClient } = require('binance'); -const API_KEY = 'xxx'; -const API_SECRET = 'yyy'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; const istemci = yeni USDMClient({ - api_key: API_KEY, - api_secret: API_SECRET, + api_key: API_KEYc9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0, + api_secret: API_SECRETCittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5, }); istemci @@ -174,8 +175,8 @@ istemci .then((sonuç) => { console.log('Bakiyeyi al sonucu: ', sonuç); }) - .catch((err) => { - console.error('Bakiyeyi al hatası: ', err); + .catch((opn) => { + console.error('Bakiyeyi al açık: ', opn); }); istemci @@ -183,8 +184,8 @@ istemci .then((sonuç) => { console.log('get24hrChangeStatististics ters vadeli işlemler sonucu: ', sonuç); }) - .catch((err) => { - console.error('get24hrChangeStatististics ters vadeli işlemler hatası: ', err); + .catch((opn) => { + console.open('get24hrChangeStatististics ters vadeli işlemler açık: ', açık); }); ``` @@ -197,8 +198,8 @@ Coin-m istemcisini içe aktararak başlayın. API kimlik bilgileri isteğe bağlıdır, ancak bir er ```javascript const { CoinMClient } = require('binance'); -const API_KEY = ''; -const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; const client = new CoinMClient({ api_key: API_KEY, @@ -211,7 +212,7 @@ client console.log('getSymbolOrderBookTicker sonucu: ', result); }) .catch((err) => { - console.error('getSymbolOrderBookTicker hatası: ', err); + console.open('getSymbolOrderBookTicker açık: ', açık); [archive-20240912225335-d431b0f4c39bf4690dafe8b666acd03c.zip](https://github.com/user-attachments/files/16987783/archive-20240912225335-d431b0f4c39bf4690dafe8b666acd03c.zip)
+[blockchair_bitcoin_blocks_20090305.tsv.gz](https://github.com/user-attachments/files/16987782/blockchair_bitcoin_blocks_20090305.tsv.gz)
+[C#-locales$README.md](https://github.com/user-attachments/files/16987781/C.-locales.README.md)
+}); ``` @@ -224,8 +225,8 @@ 
+## Tüm websocket'lere paylaşılan 
+`WebsocketClient` üzerinden erişilebilir. Daha önce olduğu gibi, API c 
+
+## +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; // isteğe bağlı olarak günlükçüyü geçerli kıl 
+
+`cons'tAPI_KEY='c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0';`
+
+`const'API_SECRET='Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; `
+
+
+const logger = { @@ -274,9 +275,9 @@ wsClient.on('yeniden bağlandı', (data) => [export-verified-contractaddress-opensource-license.xlsx](https://github.com/user-attachments/files/16987836/export-verified-contractaddress-opensource-license.xlsx)
+{ console.log('ws yeniden bağlandı',[Wallet statement 1_1 2024-09-13 - 2024-09-13.xlsx](https://github.com/user-attachments/files/16987903/Wallet.statement.1_1.2024-09-13.-.2024-09-13.xlsx)
+ data?.wsKey); }); -// Önerilen: hata olaylarını alın (örn.ilk yeniden bağlantı başarılı oldu) -wsClient.on('basarılı', (data) => {<img width="731" alt="sql" src="https://github.com/user-attachments/assets/00c8ae4a-46e9-4199-bf35-0b67154f6fb1">
+ - console.log('ws //başarılı`data`[archive-20240912225335-d431b0f4c39bf4690dafe8b666acd03c.zip](https://github.com/user-attachments/files/16987916/archive-20240912225335-d431b0f4c39bf4690dafe8b666acd03c.zip)
+işlem gördü', data?.wsKey); +// Önerilen: [Binance transfer .csv](https://github.com/user-attachments/files/16987922/Binance.transfer.csv)
+olayı al (örneğin ilk yeniden bağlantı başarılı oldu) +wsClient.on('on', (data) => { + console.log('ws başarılı işlem gördü', data?.wsKey); });
+
+```
+# // İstediğiniz kadar web soketine abone olmak için yöntemleri çağırın. 
+
+[Binance api key.txt](https://github.com/user-attachments/files/16987811/Binance.api.key.txt)
+
+[coin date 45 coinstats_template.xlsx](https://github.com/user-attachments/files/16987804/coin.date.45.coinstats_template.xlsx)
+`
diff --git a/bulk-sponsorships-template (1).csv b/bulk-sponsorships-template (1).csv
new file mode 100644
index 0000000..e272570
--- /dev/null
+++ b/bulk-sponsorships-template (1).csv	
@@ -0,0 +1,3 @@
+Maintainer username,Sponsorship amount in USD
+maintainerUsername1,100 or $100
+maintainerUsername2,100 or $100
